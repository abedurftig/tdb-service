language: java

before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"

script:
  - "./gradlew clean test build -Dupload-testresults=true"

deploy:
  - provider: heroku
    skip_cleanup: true
    api_key:
      secure: $HEROKU_API_KEY
    on:
      branch: master
    app: tdb-service
  - provider: heroku
    skip_cleanup: true
    api_key:
      secure: $HEROKU_API_KEY
    on:
      branch: develop
    app: tdb-service-staging

after_success:
  - ./gradlew createDockerfile
  - cp build/libs/tdb-service-0.0.1.jar build/docker/jdk8/
  - docker login -u $DOCKER_USER -p $DOCKER_PW
  - export REPO=dasnervtdoch/tdb-service
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo "$TRAVIS_BRANCH.$TRAVIS_BUILD_NUMBER" ; fi`
  - docker build -f build/docker/jdk8/Dockerfile -t $REPO:$TAG .
  - docker push $REPO
  
