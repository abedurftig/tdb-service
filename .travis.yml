language: java

before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"

script:
  - export API_URL=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "$API_URL_MASTER"; else echo "$API_URL_DEVELOP" ; fi`
  - export PROJECT_KEY=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "$PROJECT_MASTER"; else echo "$PROJECT_DEVELOP" ; fi`
  - ./gradlew clean test build -Dupload-testresults=true

deploy:
  - provider: heroku
    skip_cleanup: true
    api_key: $HEROKU_API_KEY
    on:
      branch: master
    app: tdb-service
  - provider: heroku
    skip_cleanup: true
    api_key: $HEROKU_API_KEY
    on:
      branch: develop
    app: tdb-service-staging

after_success:
  - ./gradlew createDockerfile
  - cp build/libs/tdb-service.jar build/docker/jdk8/
  # will only build and push for master or tag
  # master --> latest
  # tag --> 1.0.1
  - ./docker/build-push-docker.sh
