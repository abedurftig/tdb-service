###
#   Database Settings
###
spring:
  datasource:
    url: jdbc:h2:mem:test-dashboard;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    platform: h2
    username: sa
    password:
    driverClassName: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: true
        format_sql: true
  h2:
    console:
      enabled: true
      path: /console
      settings:
        trace: false
        web-allow-others: false
  http:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      resolve-lazily: false

# MULTIPART (MultipartProperties)
# Whether to resolve the multipart request lazily at the time of file or parameter access.        spring.http.multipart.enabled=true
# Enable support of multi-part uploads.
# spring.http.multipart.file-size-threshold=3 # Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
# Whether to resolve the multipart request lazily at the time of file or parameter access.        spring.http.multipart.location= /
# Intermediate location of uploaded files.
# Whether to resolve the multipart request lazily at the time of file or parameter access.        spring.http.multipart.max-file-size=10MB
# Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
# Whether to resolve the multipart request lazily at the time of file or parameter access.        spring.http.multipart.max-request-size=10MB
# Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
# Whether to resolve the multipart request lazily at the time of file or parameter access.        spring.http.multipart.resolve-lazily=false
# Whether to resolve the multipart request lazily at the time of file or parameter access.