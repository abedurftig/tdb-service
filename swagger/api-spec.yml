swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Test Dashboard"
  contact:
    email: "dasnervtdoch@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/api"
schemes:
- "http"
paths:
  /account/{accountId}:
    get:
      summary: Account
      description: Get the account specified by the given accountId.
      operationId: getAccount
      parameters:
        - name: accountId
          in: path
          description: Id of requested account.
          required: true
          type: number
      tags:
        - Account
      responses:
        200:
          description: The requested account
          schema:
            $ref: '#/definitions/Account'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /account/{accountId}/projects:
    get:
      summary: Account Projects
      description: Get all projects for the account specified by the given accountId.
      operationId: getProjects
      parameters:
        - name: accountId
          in: path
          description: Id of the owning account.
          required: true
          type: number
      tags:
        - Account
      responses:
        200:
          description: An array of projects
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /project/{projectId}:
    get:
      summary: Get a single project
      description: Get the project specified by the given projectId.
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          description: Id of requested project.
          required: true
          type: number
      tags:
        - Project
      responses:
        200:
          description: The requested project
          schema:
            $ref: '#/definitions/Project'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /project/{projectId}/testexecutions:
    get:
      summary: Get a single project
      description: Get the project specified by the given projectId.
      operationId: getProjectTextExecutions
      parameters:
        - name: projectId
          in: path
          description: Id of requested project.
          required: true
          type: number
      tags:
        - Project
      responses:
        200:
          description: The requested project
          schema:
            type: array
            items:
              $ref: '#/definitions/TestExecution'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /project/{projectId}/newtestexecution:
    get:
      summary: TODO
      description: TODO
      operationId: getNewTestExecutionForm
      parameters:
        - name: projectId
          in: path
          description: TODO
          required: true
          type: number
      tags:
        - Test Execution
      responses:
        200:
          description: TODO
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Uploads a text execution XML file.
      description: TODO
      operationId: postProjectTextExecution
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: upfile
          type: file
          description: TODO
      tags:
        - Test Execution
      responses:
        200:
          description: TODO
          schema:
            type: number
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
securityDefinitions:
  test_dashbard_auth:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Account:
    type: object
    required:
    - accountName
    properties:
      accountName:
        type: string
      createTime:
        type: string
      projects:
        type: array
        items:
          $ref: '#/definitions/Project'
  TestExecution:
    type: object
    properties:
      project:
        $ref: '#/definitions/Project'
      createTime:
        type: string
  Project:
    type: object
    required:
    - name
    properties:
      name:
        type: string
      age:
        type: integer
        format: int32
        minimum: 0
  Error:
    type: object
    required:
    - name
    properties:
      name:
        type: string
      message:
        type: string